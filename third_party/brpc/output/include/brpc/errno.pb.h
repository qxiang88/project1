// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/errno.proto

#ifndef PROTOBUF_brpc_2ferrno_2eproto__INCLUDED
#define PROTOBUF_brpc_2ferrno_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace brpc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_brpc_2ferrno_2eproto();
void protobuf_AssignDesc_brpc_2ferrno_2eproto();
void protobuf_ShutdownFile_brpc_2ferrno_2eproto();


enum Errno {
  SYS_EPERM = 1,
  SYS_ENOENT = 2,
  SYS_ESRCH = 3,
  SYS_EINTR = 4,
  SYS_EIO = 5,
  SYS_ENXIO = 6,
  SYS_E2BIG = 7,
  SYS_ENOEXEC = 8,
  SYS_EBADF = 9,
  SYS_ECHILD = 10,
  SYS_EAGAIN = 11,
  SYS_ENOMEM = 12,
  SYS_EACCES = 13,
  SYS_EFAULT = 14,
  SYS_ENOTBLK = 15,
  SYS_EBUSY = 16,
  SYS_EEXIST = 17,
  SYS_EXDEV = 18,
  SYS_ENODEV = 19,
  SYS_ENOTDIR = 20,
  SYS_EISDIR = 21,
  SYS_EINVAL = 22,
  SYS_ENFILE = 23,
  SYS_EMFILE = 24,
  SYS_ENOTTY = 25,
  SYS_ETXTBSY = 26,
  SYS_EFBIG = 27,
  SYS_ENOSPC = 28,
  SYS_ESPIPE = 29,
  SYS_EROFS = 30,
  SYS_EMLINK = 31,
  SYS_EPIPE = 32,
  SYS_EDOM = 33,
  SYS_ERANGE = 34,
  SYS_EDEADLK = 35,
  SYS_ENAMETOOLONG = 36,
  SYS_ENOLCK = 37,
  SYS_ENOSYS = 38,
  SYS_ENOTEMPTY = 39,
  SYS_ELOOP = 40,
  SYS_ENOMSG = 42,
  SYS_EIDRM = 43,
  SYS_ECHRNG = 44,
  SYS_EL2NSYNC = 45,
  SYS_EL3HLT = 46,
  SYS_EL3RST = 47,
  SYS_ELNRNG = 48,
  SYS_EUNATCH = 49,
  SYS_ENOCSI = 50,
  SYS_EL2HLT = 51,
  SYS_EBADE = 52,
  SYS_EBADR = 53,
  SYS_EXFULL = 54,
  SYS_ENOANO = 55,
  SYS_EBADRQC = 56,
  SYS_EBADSLT = 57,
  SYS_EBFONT = 59,
  SYS_ENOSTR = 60,
  SYS_ENODATA = 61,
  SYS_ETIME = 62,
  SYS_ENOSR = 63,
  SYS_ENONET = 64,
  SYS_ENOPKG = 65,
  SYS_EREMOTE = 66,
  SYS_ENOLINK = 67,
  SYS_EADV = 68,
  SYS_ESRMNT = 69,
  SYS_ECOMM = 70,
  SYS_EPROTO = 71,
  SYS_EMULTIHOP = 72,
  SYS_EDOTDOT = 73,
  SYS_EBADMSG = 74,
  SYS_EOVERFLOW = 75,
  SYS_ENOTUNIQ = 76,
  SYS_EBADFD = 77,
  SYS_EREMCHG = 78,
  SYS_ELIBACC = 79,
  SYS_ELIBBAD = 80,
  SYS_ELIBSCN = 81,
  SYS_ELIBMAX = 82,
  SYS_ELIBEXEC = 83,
  SYS_EILSEQ = 84,
  SYS_ERESTART = 85,
  SYS_ESTRPIPE = 86,
  SYS_EUSERS = 87,
  SYS_ENOTSOCK = 88,
  SYS_EDESTADDRREQ = 89,
  SYS_EMSGSIZE = 90,
  SYS_EPROTOTYPE = 91,
  SYS_ENOPROTOOPT = 92,
  SYS_EPROTONOSUPPORT = 93,
  SYS_ESOCKTNOSUPPORT = 94,
  SYS_EOPNOTSUPP = 95,
  SYS_EPFNOSUPPORT = 96,
  SYS_EAFNOSUPPORT = 97,
  SYS_EADDRINUSE = 98,
  SYS_EADDRNOTAVAIL = 99,
  SYS_ENETDOWN = 100,
  SYS_ENETUNREACH = 101,
  SYS_ENETRESET = 102,
  SYS_ECONNABORTED = 103,
  SYS_ECONNRESET = 104,
  SYS_ENOBUFS = 105,
  SYS_EISCONN = 106,
  SYS_ENOTCONN = 107,
  SYS_ESHUTDOWN = 108,
  SYS_ETOOMANYREFS = 109,
  SYS_ETIMEDOUT = 110,
  SYS_ECONNREFUSED = 111,
  SYS_EHOSTDOWN = 112,
  SYS_EHOSTUNREACH = 113,
  SYS_EALREADY = 114,
  SYS_EINPROGRESS = 115,
  SYS_ESTALE = 116,
  SYS_EUCLEAN = 117,
  SYS_ENOTNAM = 118,
  SYS_ENAVAIL = 119,
  SYS_EISNAM = 120,
  SYS_EREMOTEIO = 121,
  SYS_EDQUOT = 122,
  SYS_ENOMEDIUM = 123,
  SYS_EMEDIUMTYPE = 124,
  SYS_ECANCELED = 125,
  SYS_ENOKEY = 126,
  SYS_EKEYEXPIRED = 127,
  SYS_EKEYREVOKED = 128,
  SYS_EKEYREJECTED = 129,
  ENOSERVICE = 1001,
  ENOMETHOD = 1002,
  EREQUEST = 1003,
  EAUTH = 1004,
  ETOOMANYFAILS = 1005,
  EPCHANFINISH = 1006,
  EBACKUPREQUEST = 1007,
  ERPCTIMEDOUT = 1008,
  EFAILEDSOCKET = 1009,
  EHTTP = 1010,
  EOVERCROWDED = 1011,
  ERTMPPUBLISHABLE = 1012,
  ERTMPCREATESTREAM = 1013,
  EEOF = 1014,
  EUNUSED = 1015,
  EINTERNAL = 2001,
  ERESPONSE = 2002,
  ELOGOFF = 2003,
  ELIMIT = 2004,
  ECLOSE = 2005,
  EITP = 2006
};
bool Errno_IsValid(int value);
const Errno Errno_MIN = SYS_EPERM;
const Errno Errno_MAX = EITP;
const int Errno_ARRAYSIZE = Errno_MAX + 1;

const ::google::protobuf::EnumDescriptor* Errno_descriptor();
inline const ::std::string& Errno_Name(Errno value) {
  return ::google::protobuf::internal::NameOfEnum(
    Errno_descriptor(), value);
}
inline bool Errno_Parse(
    const ::std::string& name, Errno* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Errno>(
    Errno_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace brpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::brpc::Errno> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::brpc::Errno>() {
  return ::brpc::Errno_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_brpc_2ferrno_2eproto__INCLUDED
